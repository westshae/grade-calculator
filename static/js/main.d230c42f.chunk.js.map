{"version":3,"sources":["components/paper.js","components/course.js","components/initiate.js","App.js","index.js"],"names":["Container","styled","div","Paragraph","p","ID","Total","Input","input","InputContainer","HR","hr","Paper","props","useState","gradePercent","setGradePercent","percentOfGrade","setPercentOfGrade","paperTotal","setPaperTotal","useEffect","callback","index","id","onChange","e","value","target","Boolean","isNaN","GUI","ButtonContainer","Button","button","Header","h1","PaperContainer","Course","numPapers","setNumPapers","Array","fill","paperComponentList","setPaperComponentList","paperTotalList","setPaperTotalList","courseTotal","setCourseTotal","count","setCount","handleButton","change","componentList","push","updatePaperTotals","pop","totalList","splice","total","reduce","sum","add","onClick","CourseContainer","Initiate","numCourses","setNumCourses","courseTotalList","setCourseTotalList","courseComponentList","setCourseComponentList","yearTotal","setYearTotal","length","updateCourseResults","InfoContainer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d230c42f.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport React, { useState, useEffect } from \"react\";\n\n\nconst Container = styled.div`\n    display:grid;\n    grid-template-columns:repeat(4,1fr);\n    grid-template-rows:1fr;\n    background-color:#222831;\n\n    /* margin-left:0.75rem;\n    margin-right:0.75rem; */\n\n    /* border-bottom:solid 2px;\n    border-color:#32E0C4; */\n`\n\nconst Paragraph = styled.p`\n    color:#F6F7F9;\n    margin-top:auto;\n    margin-bottom:auto;\n    text-align:center;    \n    padding-top:5%;\n    padding-bottom:5%;\n    font-size:1.5rem;\n    margin-left:auto;\n    margin-right:auto;\n\n`\n\nconst ID = styled(Paragraph)`\n    font-size:1.5rem;\n`\nconst Total = styled(Paragraph)`\n    font-size:1.5rem;\n`\n\nconst Input = styled.input`\n    background-color:#393E46;\n    border:none;\n    height:100%;\n    padding-top:0;\n    padding-bottom:0;\n    vertical-align:middle;\n\n    width:5rem;\n    text-align:center;\n    font-size:2rem;\n\n    /* font-size:; */\n`\n\nconst InputContainer = styled.div`\n    display:flexbox;\n    vertical-align:middle;\n`\n\nconst HR = styled.hr`\n    color:#1B6CA8;\n    height:3px;\n    border:none;\n    background-color:#1B6CA8;\n`\n\nconst Paper = (props) =>{\n    const [gradePercent, setGradePercent] = useState(null);\n    const [percentOfGrade, setPercentOfGrade] = useState(null);\n    const [paperTotal, setPaperTotal] = useState(null);\n\n    //Handles input change of gradePercent\n    const handleGradePercent = e => {\n        let value = e.target.value;\n        switch(value){\n            case (!Boolean(value)):break;\n            case (isNaN(value)):break;\n            case (value > 100):break;\n            case (value < 0):break;\n            default://continue\n        }\n\n        setGradePercent(value)\n    }\n\n    //Handles input change of percentOfGrade\n    const handlePercentOfGrade = e => {\n        //Validates the entry received\n        let value = e.target.value;\n        switch(value){\n            case (!Boolean(value)):break;\n            case (isNaN(value)):break;\n            case (value > 100):break;\n            case (value < 0):break;\n            default://continue\n        }\n\n        setPercentOfGrade(value)\n    }\n\n    //Detects change of gradePercent or percentOfgrade and sets paperTotal\n    useEffect(()=>{\n        setPaperTotal((gradePercent*0.1)*(percentOfGrade*0.1));\n    }, [gradePercent, percentOfGrade])\n\n    //Detects change of paperTotal then sends index and paper total to course.js\n    //Seperate from above useEffect for syncing data\n    useEffect(()=>{\n        props.callback(props.index, paperTotal);\n    }, [paperTotal])\n\n    return(\n        <div>\n            <Container>\n                <ID>ID:{props.id}</ID>\n                <InputContainer>\n                    <Paragraph>Work <br/> grade</Paragraph>\n                    <Input onChange={handleGradePercent} value={gradePercent}/>\n                </InputContainer>\n\n                <InputContainer>\n                    <Paragraph>Percent <br/> of grade</Paragraph>\n                    <Input onChange={handlePercentOfGrade} value={percentOfGrade}/>\n                </InputContainer>\n\n                <Total>Total: {paperTotal}%</Total>\n\n            </Container>\n            <HR/>\n        </div>\n    )\n}\n\nexport default Paper;","import styled from \"styled-components\"\nimport React, { useState} from \"react\"\n\n//Component import\nimport Paper from \"./paper\"\n\nconst Container = styled.div`\n    /* background-color:#222831; */\n    border-radius:0.25rem;\n    height:100%;\n    \n\n`\n\nconst GUI = styled.div`\n\n    display:grid;\n    grid-template-columns:3fr 1fr;\n    background-color:#222831;\n\n    /* margin:0.75rem; */\n\n    border-bottom:solid 2px;\n    border-color:#1B6CA8;\n`\n\nconst ButtonContainer = styled.div`\n    margin:0.5rem;\n    display:grid;\n    grid-template-columns:repeat(2,1fr);\n    grid-column-gap:0.35rem;\n`\n\nconst Button = styled.button`\n    background-color:#393E46;\n    border:none;\n    color:#f6f1f4;\n    border-radius:0.4rem;\n\n`\n\nconst Header = styled.h1`\n    margin-top:0;\n    margin-bottom:0;\n    color:#f6f1f4;\n    margin-left:0.1rem;\n\n`\nconst PaperContainer = styled.div`\n    display:grid;\n    grid-template-rows:1fr;\n    /* grid-row-gap:1rem; */\n`\n\nconst Total = styled(Header)`\n    font-size:2rem;\n    background-color:#222831;\n    margin:0;\n    \n`\n\n\nconst Course = (props) =>{\n    const [numPapers, setNumPapers] = useState(0);\n    const [paperComponentList, setPaperComponentList] = useState(Array(1).fill());\n    const [paperTotalList, setPaperTotalList] = useState([]);\n    const [courseTotal, setCourseTotal] = useState();\n    const [count, setCount] = useState(0);\n\n    //Handles increase/decrease button\n    const handleButton = (change) =>{\n        const componentList = paperComponentList;\n\n        //true == increase\n        if(change === true && numPapers < 15){\n            //Increases the numCourses value and adds a course to the componentList to be rendered\n            setNumPapers(numPapers + 1);\n            componentList.push(<Paper key={count} index={count} callback = {updatePaperTotals} id={numPapers}/>);\n            setCount(count + 1); \n        }\n        //false == decrease\n        else if (change===false && numPapers > 1){\n            //Decreases the numCourses value and removes the last course in the componentList to be rendered\n            setNumPapers(numPapers - 1);\n            componentList.pop();\n        }\n    \n        setPaperComponentList(componentList)\n    }\n\n    //Callback function that is called by paper component\n    const updatePaperTotals = (index, paperTotal) =>{\n        //Replaces the value at the index with the new course total\n        let totalList = paperTotalList;\n        totalList.splice(index, 1, paperTotal)\n\n\n        //Sets the courseTotalList state, as well as updates the year total value\n        const total = totalList.reduce((sum, add)=> sum + add, 0);\n        setCourseTotal(total);\n        setPaperTotalList(totalList);\n\n        //Sends total and index to initiate.js\n        props.callback(props.index, total);\n    }\n\n    return(\n        <Container>\n            <GUI>\n                <Header>Number of assignments/tests: {numPapers}</Header>\n                {/* <Num>{numPapers}</Num> */}\n\n                <ButtonContainer>\n                    <Button onClick={()=>handleButton(true)}>Increase courses</Button>\n                    <Button onClick={()=>handleButton(false)}>Decrease courses</Button>\n                </ButtonContainer>\n            </GUI>\n\n            <br/>\n\n            <PaperContainer>\n                {paperComponentList}\n            </PaperContainer>\n\n            <Total>Course Total: {courseTotal}%</Total>\n        </Container>\n    )\n}\n\nexport default Course;","import styled from \"styled-components\";\nimport React, {useState} from \"react\"\n\n//Component imports\nimport Course from \"./course\"\n\nconst Header = styled.h1`\n    margin-top:0;\n    margin-bottom:0;\n    color:#f6f1f4;\n    margin-left:0.1rem;\n`\n\nconst Container = styled.div`\n    display:grid;\n    grid-template-columns:repeat(1, 1fr);       \n`\n\nconst GUI = styled.div`\n    display:grid;\n    grid-template-columns:3fr 1fr;\n    background-color:#222831;\n\n    /* margin:0.75rem; */\n\n    border-bottom:solid 2px;\n    border-color:#1B6CA8;\n\n    margin-bottom:2rem;\n\n`\n\nconst CourseContainer = styled.div`\n    display:grid;\n    grid-template-columns:repeat(2, 1fr);   \n    grid-column-gap:1rem;\n    grid-row-gap:3rem;\n\n`\n\nconst ButtonContainer = styled.div`\n    margin:0.5rem;\n    display:grid;\n    grid-template-columns:repeat(2,1fr);\n    grid-column-gap:0.35rem;\n    \n`\n\nconst Button = styled.button`\n    background-color:#393E46;\n    border:none;\n    color:#f6f1f4;\n    border-radius:0.4rem;\n`\n\nconst Total = styled(Header)`\n    font-size:2rem;\n    background-color:#222831;\n    margin:0;\n\n    border-bottom:solid 2px;\n    border-color:#1B6CA8;\n    margin-top:2rem;\n    \n`\n\nconst Initiate = () =>{\n    const [numCourses, setNumCourses] = useState(0);\n    const [courseTotalList, setCourseTotalList] = useState(Array(0).fill());\n    const [courseComponentList, setCourseComponentList] = useState(Array(0).fill())\n    const [yearTotal, setYearTotal] = useState();\n\n    //Handles increase/decrease buttons\n    const handleButton = (change) =>{\n        const componentList = courseComponentList;\n\n        //true == increase\n        if(change === true && numCourses < 15){\n            //Increases the numCourses value and adds a course to the componentList to be rendered\n            setNumCourses(numCourses + 1);\n            componentList.push(<Course key={componentList.length} index={componentList.length} callback={updateCourseResults}/>);\n        }\n        //false == decrease\n        else if (change===false && numCourses > 1){\n            //Decreases the numCourses value and removes the last course in the componentList to be rendered\n            setNumCourses(numCourses - 1);\n            componentList.pop();\n        }\n\n        setCourseComponentList(componentList)\n    }\n\n    //Callback function that is called by course component\n    const updateCourseResults = (index, courseTotal) =>{\n        //Replaces the value at the index with the new course total\n        let totalList = courseTotalList;\n        totalList.splice(index, 1, courseTotal)\n\n        //Sets the courseTotalList state, as well as updates the year total value\n        setCourseTotalList(totalList);\n        setYearTotal(totalList.reduce((sum, add)=> sum + add, 0));\n    }\n\n    return(\n        <Container>\n            <GUI>\n                <Header>Number of classes to calculate: {numCourses}</Header>\n\n                <ButtonContainer>\n                    <Button onClick={()=>handleButton(true)}>Increase courses</Button>\n                    <Button onClick={()=>handleButton(false)}>Decrease courses</Button>\n                </ButtonContainer>\n                \n\n                \n            </GUI>\n\n            \n\n            <CourseContainer>\n                {courseComponentList}\n            </CourseContainer>\n\n            <Total>Year total: {yearTotal}%</Total>\n            <p/>\n\n        </Container>\n    )\n    \n}\n\n\nexport default Initiate;","//Module imports\nimport styled from \"styled-components\";\n\n//Component imports\nimport Initiate from \"./components/initiate\"\n\nconst Container = styled.div`\n  background-color:#2f3745;\n  display:grid;\n  height:100%;\n  width:80%;\n  margin-left:auto;\n  margin-right:auto;\n`\n\nconst Header = styled.h1`\n  margin-top:0;\n    margin-bottom:0;\n    color:#f6f1f4;\n    margin-left:0.1rem;\n\n`\n\nconst Paragraph = styled.p`\n  vertical-align:bottom;\n  \n  margin-top:auto;\n  margin-bottom:0.25rem;\n  font-size:1.1rem;\n  margin-left:1rem;\n  color:#f6f1f4;\n\n`\n\nconst InfoContainer = styled.div`\n  display:grid;\n  grid-template-columns:1fr 4fr;\n  border-bottom:solid #1B6CA8 2px;\n\n  background-color:#222831;\n  margin-bottom:1rem;\n`\n\nfunction App() {\n  return (\n      <Container>\n        <InfoContainer>\n            <Header>Grade calculator</Header>\n            <Paragraph>This website has been created to simplify the calculation of your grades, and predict what types of grades you need, and where you should focus your effort.</Paragraph>\n        </InfoContainer>\n        <Initiate/>\n      </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}