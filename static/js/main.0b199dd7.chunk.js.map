{"version":3,"sources":["components/paper.js","components/course.js","components/initiate.js","App.js","index.js"],"names":["Container","styled","div","Paragraph","p","ID","Total","Input","input","InputContainer","HR","hr","Paper","props","useState","gradePercent","setGradePercent","percentOfGrade","setPercentOfGrade","paperTotal","setPaperTotal","useEffect","callback","index","id","onChange","e","value","target","Boolean","isNaN","parseFloat","toFixed","GUI","ButtonContainer","Button","button","Header","h1","PaperContainer","Course","numPapers","setNumPapers","Array","fill","paperComponentList","setPaperComponentList","paperTotalList","setPaperTotalList","courseTotal","setCourseTotal","count","setCount","updatePaperTotals","totalList","splice","total","reduce","sum","add","onClick","change","componentList","push","pop","handleButton","CourseContainer","Initiate","numCourses","setNumCourses","courseTotalList","courseComponentList","setCourseComponentList","yearTotal","setYearTotal","updateCourseResults","length","InfoContainer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b199dd7.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport React, { useState, useEffect } from \"react\";\n\n\nconst Container = styled.div`\n    display:grid;\n    grid-template-columns:repeat(4,1fr);\n    grid-template-rows:1fr;\n    background-color:#222831;\n\n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        grid-template-columns: repeat(1, 1fr);\n    }\n`\n\nconst Paragraph = styled.p`\n    color:#F6F7F9;\n    margin-top:auto;\n    margin-bottom:auto;\n    text-align:center;    \n    padding-top:5%;\n    padding-bottom:5%;\n    font-size:1.5rem;\n    margin-left:auto;\n    margin-right:auto;\n\n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        text-align:left;\n        margin-left:1rem;\n    }\n\n`\n\nconst ID = styled(Paragraph)`\n    font-size:1.5rem;\n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n    }\n`\nconst Total = styled(Paragraph)`\n    font-size:1.5rem;\n`\n\nconst Input = styled.input`\n    color:#F6F7F9;\n\n    background-color:#393E46;\n    border:none;\n    height:100%;\n    padding-top:0;\n    padding-bottom:0;\n    vertical-align:middle;\n\n    width:5rem;\n    text-align:center;\n    font-size:2rem;\n\n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        margin-top:auto;\n        margin-bottom:auto;\n        height:4rem;\n        text-align:none;\n        vertical-align:baseline;\n        width:80%;\n        border-left: 2px solid #1B6CA8;\n    }\n`\n\n\nconst InputContainer = styled.div`\n    display:flexbox;\n    vertical-align:middle;\n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        display:grid;\n        grid-template-columns:1fr 2fr;\n        align-items: center;\n        justify-items: center;\n    }\n`\n\nconst HR = styled.hr`\n    color:#1B6CA8;\n    height:3px;\n    border:none;\n    background-color:#1B6CA8;\n`\n\nconst Paper = (props) =>{\n    const [gradePercent, setGradePercent] = useState(null);\n    const [percentOfGrade, setPercentOfGrade] = useState(null);\n    const [paperTotal, setPaperTotal] = useState(null);\n\n    //Handles input change of gradePercent\n    const handleGradePercent = e => {\n        let value = e.target.value;\n        switch(value){\n            case (!Boolean(value)):break;\n            case (isNaN(value)):break;\n            case (value > 100):break;\n            case (value < 0):break;\n            default://continue\n        }\n\n        setGradePercent(value)\n    }\n\n    //Handles input change of percentOfGrade\n    const handlePercentOfGrade = e => {\n        //Validates the entry received\n        let value = e.target.value;\n        switch(value){\n            case (!Boolean(value)):break;\n            case (isNaN(value)):break;\n            case (value > 100):break;\n            case (value < 0):break;\n            default://continue\n        }\n\n        setPercentOfGrade(value)\n    }\n\n    //Detects change of gradePercent or percentOfgrade and sets paperTotal\n    useEffect(()=>{\n        setPaperTotal((gradePercent*0.1)*(percentOfGrade*0.1));\n    }, [gradePercent, percentOfGrade])\n\n    //Detects change of paperTotal then sends index and paper total to course.js\n    //Seperate from above useEffect for syncing data\n    useEffect(()=>{\n        props.callback(props.index, paperTotal);\n    }, [paperTotal, props])\n\n    return(\n        <div>\n            <Container>\n                <ID>ID:{props.id}</ID>\n                <InputContainer>\n                    <Paragraph>Work <br/> grade</Paragraph>\n                    <Input onChange={handleGradePercent} value={gradePercent}/>\n                </InputContainer>\n\n                <InputContainer>\n                    <Paragraph>Percent <br/> of grade</Paragraph>\n                    <Input onChange={handlePercentOfGrade} value={percentOfGrade}/>\n                </InputContainer>\n\n                <Total>Total: {parseFloat(paperTotal).toFixed(2)}%</Total>\n\n            </Container>\n            <HR/>\n        </div>\n    )\n}\n\nexport default Paper;","import styled from \"styled-components\"\nimport React, { useState} from \"react\"\n\n//Component import\nimport Paper from \"./paper\"\n\nconst Container = styled.div`\n    /* background-color:#222831; */\n    border-radius:0.25rem;\n    height:100%;\n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        /* min-width:0;\n        min-height:0; */\n        /* overflow:hidden; */\n    }\n    \n\n`\n\nconst GUI = styled.div`\n\n    display:grid;\n    grid-template-columns:3fr 1fr;\n    background-color:#222831;\n\n    /* margin:0.75rem; */\n\n    border-bottom:solid 2px;\n    border-color:#1B6CA8;\n\n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        grid-template-columns: repeat(1, 1fr);\n    }\n`\n\nconst ButtonContainer = styled.div`\n    margin:0.5rem;\n    display:grid;\n    grid-template-columns:repeat(1,1fr);\n    grid-column-gap:0.35rem;\n\n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        grid-row-gap:0.35rem;\n\n        grid-template-columns: repeat(1, 1fr);\n    }\n`\n\nconst Button = styled.button`\n    background-color:#393E46;\n    border:none;\n    color:#f6f1f4;\n    border-radius:0.4rem;\n\n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        grid-template-columns: repeat(1, 1fr);\n        grid-column-gap:0.35rem;\n        height:2rem;\n\n    }\n`\n\nconst Header = styled.h1`\n    margin-top:0;\n    margin-bottom:0;\n    color:#f6f1f4;\n    margin-left:0.1rem;\n\n`\nconst PaperContainer = styled.div`\n    display:grid;\n    grid-template-rows:repeat(1, 1fr);\n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        /* grid-template-rows: repeat(1, 1fr); */\n    }\n`\n\nconst Total = styled(Header)`\n    font-size:2rem;\n    background-color:#222831;\n    margin:0;\n    \n`\n\n\nconst Course = (props) =>{\n    const [numPapers, setNumPapers] = useState(0);\n    const [paperComponentList, setPaperComponentList] = useState(Array(1).fill());\n    const [paperTotalList, setPaperTotalList] = useState([]);\n    const [courseTotal, setCourseTotal] = useState();\n    const [count, setCount] = useState(0);\n\n    //Handles increase/decrease button\n    const handleButton = (change) =>{\n        const componentList = paperComponentList;\n\n        //true == increase\n        if(change === true && numPapers < 30){\n            //Increases the numCourses value and adds a course to the componentList to be rendered\n            setNumPapers(numPapers + 1);\n            componentList.push(<Paper key={count} index={count} callback = {updatePaperTotals} id={numPapers}/>);\n            setCount(count + 1); \n        }\n        //false == decrease\n        else if (change===false && numPapers > 1){\n            //Decreases the numCourses value and removes the last course in the componentList to be rendered\n            setNumPapers(numPapers - 1);\n            componentList.pop();\n        }\n    \n        setPaperComponentList(componentList)\n    }\n\n    //Callback function that is called by paper component\n    const updatePaperTotals = (index, paperTotal) =>{\n        //Replaces the value at the index with the new course total\n        let totalList = paperTotalList;\n        totalList.splice(index, 1, paperTotal)\n\n\n        //Sets the courseTotalList state, as well as updates the year total value\n        const total = totalList.reduce((sum, add)=> sum + add, 0);\n        setCourseTotal(total);\n        setPaperTotalList(totalList);\n\n        //Sends total and index to initiate.js\n        props.callback(props.index, total);\n    }\n\n    return(\n        <Container>\n            <GUI>\n                <Header>Number of papers: {numPapers}</Header>\n\n                <ButtonContainer>\n                    <Button onClick={()=>handleButton(true)}>Increase papers</Button>\n                </ButtonContainer>\n            </GUI>\n\n            <br/>\n\n            <PaperContainer>\n                {paperComponentList}\n            </PaperContainer>\n\n            <Total>Course Total: {parseFloat(courseTotal).toFixed(2)}%</Total>\n        </Container>\n    )\n}\n\nexport default Course;","import styled from \"styled-components\";\nimport React, {useState} from \"react\"\n\n//Component imports\nimport Course from \"./course\"\n\nconst Header = styled.h1`\n    margin-top:0;\n    margin-bottom:0;\n    color:#f6f1f4;\n    margin-left:0.1rem;\n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        grid-template-columns: repeat(1, 1fr);\n    }\n`\n\nconst Container = styled.div`\n    display:grid;\n    grid-template-columns:repeat(1, 1fr);    \n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        grid-template-columns: repeat(1, 1fr);\n    }   \n`\n\nconst GUI = styled.div`\n    display:grid;\n    grid-template-columns:3fr 1fr;\n    background-color:#222831;\n\n    /* margin:0.75rem; */\n\n    border-bottom:solid 2px;\n    border-color:#1B6CA8;\n\n    margin-bottom:2rem;\n\n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        grid-template-columns: repeat(1, 1fr);\n    }\n`\n\nconst CourseContainer = styled.div`\n    display:grid;\n    grid-template-columns:repeat(2, 1fr);   \n    grid-column-gap:1rem;\n    grid-row-gap:3rem;\n\n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        grid-template-columns: repeat(1, 1fr);\n    }\n\n`\n\nconst ButtonContainer = styled.div`\n    margin:0.5rem;\n    display:grid;\n    grid-template-columns:repeat(1,1fr);\n    grid-column-gap:0.35rem;\n\n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        grid-template-columns: repeat(1, 1fr);\n        grid-row-gap:0.35rem;\n    }\n    \n`\n\nconst Button = styled.button`\n    background-color:#393E46;\n    border:none;\n    color:#f6f1f4;\n    height:2rem;\n    border-radius:0.4rem;\n    \n    @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n        grid-template-columns: repeat(1, 1fr);\n        grid-column-gap:0.35rem;\n    }\n`\n\nconst Total = styled(Header)`\n    font-size:2rem;\n    background-color:#222831;\n    margin:0;\n\n    border-bottom:solid 2px;\n    border-color:#1B6CA8;\n    margin-top:2rem;\n    \n`\n\nconst Initiate = () =>{\n    const [numCourses, setNumCourses] = useState(0);\n    const [courseTotalList] = useState(Array(0).fill());\n    const [courseComponentList, setCourseComponentList] = useState(Array(0).fill())\n    const [yearTotal, setYearTotal] = useState();\n\n    //Handles increase/decrease buttons\n    const handleButton = (change) =>{\n        const componentList = courseComponentList;\n\n        //true == increase\n        if(change === true && numCourses < 15){\n            //Increases the numCourses value and adds a course to the componentList to be rendered\n            setNumCourses(numCourses + 1);\n            componentList.push(<Course key={componentList.length} index={componentList.length} callback={updateCourseResults}/>);\n        }\n        //false == decrease\n        else if (change===false && numCourses > 1){\n            //Decreases the numCourses value and removes the last course in the componentList to be rendered\n            setNumCourses(numCourses - 1);\n            componentList.pop();\n        }\n\n        setCourseComponentList(componentList)\n    }\n\n    //Callback function that is called by course component\n    const updateCourseResults = (index, courseTotal) =>{\n        //Replaces the value at the index with the new course total\n        let totalList = courseTotalList;\n        totalList.splice(index, 1, courseTotal)\n        setYearTotal((totalList.reduce((sum, add)=> sum + add, 0)));\n    }\n\n    return(\n        <Container>\n            <GUI>\n                <Header>Number of courses to calculate: {numCourses}</Header>\n\n                <ButtonContainer>\n                    <Button onClick={()=>handleButton(true)}>Increase courses</Button>\n                </ButtonContainer>\n            </GUI>\n\n            \n\n            <CourseContainer>\n                {courseComponentList}\n            </CourseContainer>\n\n            <Total>Year total: {parseFloat(yearTotal/numCourses).toFixed(2)}%</Total>\n            <p/>\n\n        </Container>\n    )\n    \n}\n\n\nexport default Initiate;","//Module imports\nimport styled from \"styled-components\";\n\n//Component imports\nimport Initiate from \"./components/initiate\"\n\nconst Container = styled.div`\n  background-color:#2f3745;\n  display:grid;\n  height:100%;\n  width:80%;\n  margin-left:auto;\n  margin-right:auto;\n  @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n      overflow-x:auto;\n      width:100%;\n      margin-left:0;\n      margin-right:0;\n    }\n`\n\nconst Header = styled.h1`\n  margin-top:0;\n    margin-bottom:0;\n    color:#f6f1f4;\n    margin-left:1rem;\n\n`\n\nconst Paragraph = styled.p`\n  vertical-align:bottom;\n  \n  margin-top:auto;\n  margin-bottom:0.25rem;\n  font-size:1.1rem;\n  margin-left:1rem;\n  color:#f6f1f4;\n\n`\n\nconst InfoContainer = styled.div`\n  display:grid;\n  grid-template-columns:1fr 4fr;\n  border-bottom:solid #1B6CA8 2px;\n\n  background-color:#222831;\n  margin-bottom:1rem;\n\n  @media only screen \n    and (max-device-width: 480px)\n    and (orientation: portrait) {\n      grid-template-columns: repeat(1, 1fr);\n  }\n`\n\nconst App = () => {\n  return (\n      <Container>\n        <InfoContainer>\n            <Header>Grade calculator</Header>\n            <Paragraph>Calculate your grades with ease. Simply add your work and get your results.</Paragraph>\n        </InfoContainer>\n        <Initiate/>\n      </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}